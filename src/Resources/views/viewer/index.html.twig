{% extends '@LogViewer/base.html.twig' %}

{% block stylesheets %}
    <link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.13.2/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jquery-contextmenu@2.9.2/dist/jquery.contextMenu.min.css">
    
    <style>
        .toggle-checkbox:checked {
            @apply: right-0 border-green-400;
            right: 0;
            border-color: #68D391;
        }
        .toggle-checkbox:checked + .toggle-label {
            @apply: bg-green-400;
            background-color: #68D391;
        }
        
        td {
          	max-width:150px;
          	white-space: nowrap;
          	overflow: hidden;
          	text-overflow: ellipsis;
          	padding: 0px 10px !important;
        }
        
        .redClass {
        	background-color: #ff05053b !important;
        }
        
        .yellowClass {
        	background-color: #f1cc003b !important;
        }
        
        .dataTables_scroll {
        	padding-top: 5px;
        }
        
    </style>
{% endblock %}
{% block javascripts %}

    <script src="https://momentjs.com/downloads/moment.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/datatables.net@1.13.6/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.13.2/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/jeffreydwalter/ColReorderWithResize@9ce30c640e394282c9e0df5787d54e5887bc8ecc/ColReorderWithResize.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-contextmenu@2.9.2/dist/jquery.contextMenu.min.js"></script>    
    
    <script type="text/javascript">
    
    	$(document).ready(function() {
        	const logsTable = $('#logsTable');
        	const groupsConfig = logsTable.data('groups-config');
        	
        	const btnFilter = $('#apply-filter');
        	const dateFilterFromInput = $('#date-filter-from');
        	const dateFilterToInput = $('#date-filter-to');
        	const levelFilterSelect = $('#level-filter');
        	const toggleCase = $('#toggle-case');
        	const selectColumnField = $('#select-column-field');
        	
        	selectColumnField.select2({
			    closeOnSelect: false,
			    width: 'style'
			});
			
			selectColumnField.on('select2:opening select2:closing', ( event ) => {
    			var $searchfield = $(this).parent().find('.select2-search__field');
    			$searchfield.prop('disabled', true);
			});
			
			selectColumnField.on('select2:unselecting', (e) => { 
  				selectColumnField.on('select2:opening', (ev) => {
    				ev.preventDefault();
    				selectColumnField.off('select2:opening');
  				});
			});
			
        	const textFormat = (value) => { return value; }
        	const jsonFormat = (value) => {
        		let formattedValue = JSON.parse(value);
        		if (typeof formattedValue === 'object' && !Array.isArray(formattedValue)) {
        			return '<pre>' + JSON.stringify(value) + '</pre>';
        		}
        		return '<pre>' + formattedValue + '</pre>';
        	}
        
        	const format = (value, type) => {
        		switch (type) {
        			case 'json': 
        				return jsonFormat(value);
        			case 'text':
        			default: 
        				return textFormat(value);
        		}
        	}
        	
        	const columnVisible = selectColumnField.select2('data').map(v => v.id);
        	
        	const datatableOptions = {
        		dom: 'Rlfrtip',
        		scrollX: true,
        		processing: true,
        		serverSide: false,
        		deferLoading: 0,
        		search: {
        			caseInsensitive: true
        		},
        		colReorder: {
            		allowReorder: false
        		},
        		asStripeClasses: [ '' ],
        		ajax: {
        			url: `${logsTable.data('remote-url')}`,
        			dataSrc: '',
        			dataType: "json",
        			error: (xhr, error, thrown) => console.log(error)
        		},
        		language: {
        			processing: '<i class="fas fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
        		},
        		order: [[0, "desc"]],
        		columnDefs: [
        			{ targets: "no-sort", orderable: false },
        			{ targets: "_all", className: "border border-gray-400" },
        			{ targets: 0, className: "context-menu" },
        			
        			{% for key, group in groups %}
        				{ targets: {{loop.index0}}, visible: {% if group.visible %}true{% else %}false{% endif %}  },
                    {% endfor %}
        		],
        		columns: Object.keys(groupsConfig).map((groupName) => ({
    				data: groupName,
    				width: groupsConfig[groupName].width,
    				render: groupsConfig[groupName].type === 'date' ? DataTable.render.datetime() : (value) => format(value, groupsConfig[groupName].type)
            	})),
            	createdRow: function( row, data, dataIndex){
            		if(data.level === 'ERROR' || data.level === 'CRITICAL' ) {
            			$(row).addClass('redClass');
            		} else if(data.level === 'WARNING') {
            			$(row).addClass('yellowClass');
            		}
            	}
        	};
        	
        	// Init Table
        	const logsDataTable = logsTable.DataTable(datatableOptions);
        	
        	
        	// On change column visible
        	selectColumnField.on('select2:select select2:unselect', function(e) {
        		const obj = e.params.data || e.params.args.data;
        		logsDataTable.column(Number(obj.id)).visible(obj.selected);
  			});
        	
        	$.contextMenu({
    			selector: ".context-menu",
			    items: {
			    	to: {name: "Seleziona come data a", callback: (key, opt) => { 
			        	const cellIndex = parseInt(opt.$trigger[0].cellIndex);
           				const row = logsDataTable.row(opt.$trigger[0].parentNode);
           				const data = row.data();
           				
           				dateFilterToInput.val(new Date(data.date).toLocaleString('sv').replace(' ', 'T').slice(0,16));
			        }},
			        from: {name: "Seleziona come data da", callback: (key, opt) => { 
			        	const cellIndex = parseInt(opt.$trigger[0].cellIndex);
           				const row = logsDataTable.row(opt.$trigger[0].parentNode);
           				const data = row.data();
           				
           				dateFilterFromInput.val(new Date(data.date).toLocaleString('sv').replace(' ', 'T').slice(0,16));
			        }}
			    }
			});
			
        	// Click on row
        	$('#logsTable tbody').on('click', 'td', function () {
        		var data = logsDataTable.cell( this ).data();
        		
        		var newDiv = $(document.createElement('div')); 
				newDiv.html(data);
				newDiv.dialog({
  					width: $(window).width() * 0.8,
  					height: $(window).height() * 0.8,
  					modal: true
				});
    		} );
        
        	/* Apply filters */
        	btnFilter.on('click', function() {
        		var url = logsTable.data('remote-url');
        
        		if (dateFilterFromInput.val() !== '') {
		        	url += '?dateFilterFrom=' + dateFilterFromInput.val();
		        }
		        	
		        if (dateFilterToInput.val() !== '') {
		        	url += '&dateFilterTo=' + dateFilterToInput.val();
		        }
		        	
        		url += '&level=' + levelFilterSelect.val();
        
        		logsDataTable.ajax.url(url).load();
        	});
        	
			// if passed log level        	
        	if(new URLSearchParams(window.location.search).has('level')) {
        	
        		dateFilterFromInput.val(new Date(new Date().setHours(0,0,0,0)).toLocaleString('sv').replace(' ', 'T').slice(0,16));
        		dateFilterToInput.val(new Date(new Date().setHours(23,59,59,999)).toLocaleString('sv').replace(' ', 'T').slice(0,16));
        	
        		levelFilterSelect.val(new URLSearchParams(window.location.search).get('level'));
        		
        		btnFilter.trigger( "click" );
        	}
        });
    </script>
    
{% endblock %}

{% block body %}
<div class="w-full mx-auto" style="margin-top: 90px;">

    <div class="w-full px-4 md:px-0 md:mt-8 mb-16 text-gray-800 leading-normal">

        {% include "@LogViewer/viewer/filters.html.twig" %}

        <div class="w-full px-4 md:px-0 mb-16 text-gray-800 leading-normal">

            <div class="flex flex-wrap">
            
                <div class="w-full">
                
                    <!--Log Table-->
                    <div class="bg-white rounded shadow p-2 text-sm">
                    
                        <table
                         	id="logsTable"
                                class="display nowrap"
                                style="width: 100%;"
                                data-page-length="10"
                                data-remote-url="{{ path('kira_log_viewer.viewer.ajax') }}"
                                data-columns-names="{{ groups|keys|json_encode }}"
                                data-groups-config="{{ groups|json_encode }}"
                        >
                            <thead>
                                <tr>
                                    {% for key in groups|keys %}
                                    <th>{{ key|capitalize }}</th>
                                    {% endfor %}
                                </tr>
                            </thead>
                            <tbody>
                       </table>
                    </div>
                    <!--/Log Table-->
                </div>
            </div>

    </div>

</div>
{% endblock %}

{% block footer %}
{% endblock %}